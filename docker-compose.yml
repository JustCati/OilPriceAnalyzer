version: '3.7'

services:
  logstash:
    build: $PWD/logstash/
    image: tap:logstash
    container_name: logstash
    environment:
      - XPACK_MONITORING_ENABLED=false
      - KAFKA_OUTPUT_BOOTSTRAP_SERVERS=kafkaServer:9092
      - KAFKA_OUTPUT_TOPIC=prices
    networks:
      tap:
        ipv4_address: 10.0.100.10
    volumes:
      - $PWD/logstash/pipeline/http_poller_csv.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      kafkaTopic:
        condition: service_completed_successfully


  zookeeper:
    build: $PWD/kafka/
    image: tap:kafka
    container_name: kafkaZk
    networks:
      tap:
        ipv4_address: 10.0.100.22
    ports:
      - 2181:2181
    environment:
      - KAFKA_ACTION=start-zk


  kafkaServer:
    build: $PWD/kafka/
    image: tap:kafka
    container_name: kafkaServer
    networks:
      tap:
        ipv4_address: 10.0.100.23
    ports:
      - 9092:9092
    environment:
      - KAFKA_ACTION=start-kafka
    depends_on:
      - zookeeper


  kafkaTopic:
    build: $PWD/kafka/
    image: tap:kafka
    container_name: kafkaTopic
    networks:
      tap:
    environment:
      - KAFKA_ACTION=create-topic
      - KAFKA_TOPIC=prices
      - KAFKA_SERVER=10.0.100.23:9092
    depends_on:
      - kafkaServer
      - zookeeper


  kafkaUI:
    image: provectuslabs/kafka-ui:latest
    container_name: kafkaUI
    ports:
      - 8080:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafkaServer:9092
    networks: 
      - tap
    depends_on:
      - kafkaServer
      - zookeeper


  spark:
    build: $PWD/spark/
    image: tap:spark
    container_name: spark
    pid: host
    deploy:
      resources:
        limits:
          cpus: '8.0'
          memory: 6g
    networks:
      tap:
        ipv4_address: 10.0.100.27
    volumes:
      - $PWD/spark/code/src/:/opt/code
    entrypoint: "/opt/spark/bin/spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.4.0,org.elasticsearch:elasticsearch-spark-30_2.12:8.7.1 --master local[*] opt/code/main.py"
    depends_on:
      kafkaTopic:
        condition: service_completed_successfully


networks:
  tap:
    name: tap
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.100.1/24